// <auto-generated />
using System;
using ITFCodeWA.Domain.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITFCodeWA.Domain.Migrations.LifeDbContext
{
    [DbContext(typeof(LifeDataContext))]
    [Migration("20220814202932_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ITFCodeWA.Data.Documents.WeightRegistrator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WeightRegistratorId")
                        .HasColumnOrder(0);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorId");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<bool>("Commited")
                        .HasColumnType("bit")
                        .HasColumnName("Commited");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Date");

                    b.Property<DateTimeOffset>("DateMonth")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("DateMonth");

                    b.Property<bool>("Marked")
                        .HasColumnType("bit")
                        .HasColumnName("Marked");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasColumnName("Number");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Date");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.ToTable("WeightRegistrator", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.Documents.WeightRegistratorRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateDay")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("WeightRegistratorRows", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<int>("ContractorId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FinishDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("FinishDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("StartDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("StartDate");

                    b.Property<decimal>("TotalCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalCost");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FinishDate");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StartDate");

                    b.ToTable("Contract", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractorId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Contractor", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int")
                        .HasColumnName("Code");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("ShortName");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ShortName")
                        .IsUnique();

                    b.ToTable("Currency", "dbo");

                    b.HasCheckConstraint("CK_Currency_Code", "Code > 0 AND Code < 999");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.ExpenseGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExpenseGroupId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExpenseGroup", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.ExpenseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExpenseItemId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<int>("ExpenseGroupId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseGroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("ExpenseGroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ExpenseItem", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FoodId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Calories")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Calories");

                    b.Property<decimal>("Carbohydrates")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Carbohydrates");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<decimal>("Fats")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Fats");

                    b.Property<int>("FoodGroupId")
                        .HasColumnType("int")
                        .HasColumnName("FoodGroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Proteins")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Proteins");

                    b.HasKey("Id");

                    b.HasIndex("FoodGroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Food", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.FoodGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FoodGroupId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FoodGroup", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Good", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GoodId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<int?>("ExpenseItemId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ExpenseItemId");

                    b.Property<int>("GoodGroupId")
                        .HasColumnType("int")
                        .HasColumnName("GoodGroupId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<int?>("RevenueItemId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("RevenueItemId");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseItemId");

                    b.HasIndex("GoodGroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RevenueItemId");

                    b.ToTable("Good", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.GoodGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GoodGroupId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("GoodGroup", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)")
                        .HasColumnName("Comment");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)")
                        .HasColumnName("LastName");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(29)
                        .HasColumnType("nvarchar(29)")
                        .HasColumnName("MiddleName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name");

                    b.Property<long>("Utr")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("MiddleName");

                    b.ToTable("Person", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.RevenueGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RevenueGroupId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("RevenueGroup", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.RevenueItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RevenueItemId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(99)
                        .HasColumnType("nvarchar(99)")
                        .HasColumnName("Name")
                        .HasColumnOrder(1);

                    b.Property<int>("RevenueGroupId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueGroupId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("RevenueGroupId");

                    b.ToTable("RevenueItem", "dbo");
                });

            modelBuilder.Entity("ITFCodeWA.Data.Documents.WeightRegistrator", b =>
                {
                    b.HasOne("ITFCodeWA.Data.References.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ITFCodeWA.Data.Documents.WeightRegistratorRow", b =>
                {
                    b.HasOne("ITFCodeWA.Data.Documents.WeightRegistrator", "WeightRegistrator")
                        .WithMany("Rows")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeightRegistrator");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Contract", b =>
                {
                    b.HasOne("ITFCodeWA.Data.References.Contractor", "Contractor")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITFCodeWA.Data.References.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.ExpenseItem", b =>
                {
                    b.HasOne("ITFCodeWA.Data.References.ExpenseGroup", "ExpenseGroup")
                        .WithMany("ExpenseItems")
                        .HasForeignKey("ExpenseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseGroup");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Food", b =>
                {
                    b.HasOne("ITFCodeWA.Data.References.FoodGroup", "FoodGroup")
                        .WithMany("Foods")
                        .HasForeignKey("FoodGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodGroup");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Good", b =>
                {
                    b.HasOne("ITFCodeWA.Data.References.ExpenseItem", "ExpenseItem")
                        .WithMany("Goods")
                        .HasForeignKey("ExpenseItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITFCodeWA.Data.References.GoodGroup", "GoodGroup")
                        .WithMany("Goods")
                        .HasForeignKey("GoodGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ITFCodeWA.Data.References.RevenueItem", "RevenueItem")
                        .WithMany("Goods")
                        .HasForeignKey("RevenueItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseItem");

                    b.Navigation("GoodGroup");

                    b.Navigation("RevenueItem");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.RevenueItem", b =>
                {
                    b.HasOne("ITFCodeWA.Data.References.RevenueGroup", "RevenueGroup")
                        .WithMany("RevenueItems")
                        .HasForeignKey("RevenueGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RevenueGroup");
                });

            modelBuilder.Entity("ITFCodeWA.Data.Documents.WeightRegistrator", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.Contractor", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.ExpenseGroup", b =>
                {
                    b.Navigation("ExpenseItems");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.ExpenseItem", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.FoodGroup", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.GoodGroup", b =>
                {
                    b.Navigation("Goods");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.RevenueGroup", b =>
                {
                    b.Navigation("RevenueItems");
                });

            modelBuilder.Entity("ITFCodeWA.Data.References.RevenueItem", b =>
                {
                    b.Navigation("Goods");
                });
#pragma warning restore 612, 618
        }
    }
}
